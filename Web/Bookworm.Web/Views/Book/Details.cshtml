@model BookViewModel
@using Bookworm.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    this.ViewData["Title"] = Model.Title;
    string requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

<section class="bookDetailsInfoSection">
    <div>
        <img class="img-fluid" src=@Model.ImageUrl alt=@Model.Title />
    </div>
    <ul class="list-group">
        <li class="list-group-item"><strong>@Model.Title</strong></li>
        @if (Model.PublisherName != null)
        {
            <li class="list-group-item">Publisher: @Model.PublisherName</li>
        }
        <li class="list-group-item">
            Category:
            <a asp-controller="Book"
               asp-action="All"
               asp-route-categoryName="@Model.CategoryName">
                @Model.CategoryName
            </a>
        </li>
        <li class="list-group-item">Pages: @Model.PagesCount</li>
        <li class="list-group-item">Language: @Model.Language</li>
        <li class="list-group-item">Downloads: @Model.DownloadsCount</li>
        @if (Model.Comments?.Count() > 0)
        {
            <li class="list-group-item">Comments: @Model.Comments.Count()</li>
        }
        else
        {
            <li class="list-group-item">Comments: 0</li>
        }
        <li class="list-group-item">
            <span>
                Average Score: <span>@Model.RatingsAvg.ToString("f1")</span>
                <span>/5.0</span>
                <span>(Ratings count: <span>@Model.RatingsCount</span>)</span>
            </span>
            @if (this.SignInManager.IsSignedIn(this.User))
            {
                <span>Your Rating: <span>@Model.RatingsAvg.ToString("f1")</span></span>
            }
        </li>
        <li class="list-group-item">
            <dl>
                <dt>Authors:</dt>
                @foreach (var author in Model.Authors)
                {
                    <dd>- @author</dd>
                }
            </dl>
        </li>
    </ul>
</section>

@if (this.SignInManager.IsSignedIn(this.User))
{
    <section class="bookDetailsActionsSection">
        <a class="btn btn-lg button"
           asp-controller="Book"
           asp-action="Download"
           asp-route-id="@Model.Id">
            Download<i class="fas fa-download icon ms-2"></i>
        </a>
        <button class="btn btn-lg button"
                data-bs-toggle="modal"
                data-bs-target="#ratingModal">
            Rate Book<i class="fas fa-star icon ms-2"></i>
        </button>
    </section>
}

<section class="bookDetailsDescSection">
    <div class="card">
        <div class="card-header">
            Book Description
        </div>
        <div class="card-body">
            <p class="card-text">@Html.Raw(Model.SanitizedDescription)</p>
        </div>
    </div>
</section>

<section class="bookDetailsCommentsSection">
    <div class="formContainer">
        <form method="post" asp-controller="Comment" asp-action="Post">
            <input type="hidden" asp-for="PostComment.BookId" value="@Model.Id" />
            <div class="form-group">
                <textarea asp-for="PostComment.Content" class="form-control" rows="15"></textarea>
                <span asp-validation-for="PostComment.Content" class="text-danger"></span>
            </div>
            <div class="text-center mt-4">
                <button type="submit" class="button btn btn-lg">Post Comment</button>
            </div>
        </form>
    </div>
    @if (Model.Comments?.Count() > 0)
    {
        <section class="commentsSection">
            <h2>Comments: @Model.Comments.Count()</h2>
            @foreach (var comment in Model.Comments)
            {
                <article class="card">
                    <div class="card-header">
                        <span>Posted by - @comment.UserUserName</span>
                        @if (this.SignInManager.IsSignedIn(this.User))
                        {
                            <div class="commentActionsContainer">
                                @if (this.User.Identity.Name != comment.UserUserName)
                                {
                                    <div class="arrowsContainer">
                                        @if (@comment.UserVoteValue == 1)
                                        {
                                            <i onclick=onUpArrowClick(this)
                                               data-model-id=@comment.Id
                                               class="fas fa-circle-up greenUpArrow"></i>
                                        }
                                        else
                                        {
                                            <i onclick=onUpArrowClick(this)
                                               data-model-id=@comment.Id
                                               class="fas fa-circle-up"></i>
                                        }
                                        <span>@comment.NetWorth</span>
                                        @if (@comment.UserVoteValue == -1)
                                        {
                                            <i onclick=onDownArrowClick(this)
                                               data-model-id=@comment.Id
                                               class="fas fa-circle-down redDownArrow"></i>
                                        }
                                        else
                                        {
                                            <i onclick=onDownArrowClick(this)
                                               data-model-id=@comment.Id
                                               class="fas fa-circle-down"></i>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <span>Score: @comment.NetWorth</span>
                                }
                                @if (this.User.Identity.Name == comment.UserUserName || this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                                {
                                    <button class="btn btn-lg btn-danger modalBtn"
                                            data-model-id=@comment.Id
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteModal">
                                        Delete
                                    </button>
                                    <button class="btn btn-lg btn-warning modalBtn"
                                            onclick=editCommentFunc(this)
                                            data-model-id=@comment.Id
                                            data-bs-toggle="modal"
                                            data-bs-target="#editModal">
                                        Edit
                                    </button>
                                }
                            </div>
                        }
                    </div>
                    <div class="card-body">
                        @Html.Raw(@comment.SanitizedContent)
                    </div>
                </article>
            }
        </section>
    }
</section>

<div class="modal fade modal-lg"
     id="editModal"
     tabindex="-1"
     aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Edit Comment</h1>
            </div>
            <form method="post" asp-controller="Comment" asp-action="Edit">
                <input type="hidden" name="commentId" class="modelIdInput" value="" />
                <div class="modal-body">
                    <input type="hidden" name="bookId" value=@Model.Id />
                    <textarea name="content" rows="15"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger" data-bs-dismiss="modal">
                        Edit
                    </button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade"
     id="deleteModal"
     tabindex="-1"
     aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Comment</h1>
            </div>
            <div class="modal-body">
                Are you sure you want to delete your comment?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">
                    Close
                </button>
                <form method="post" asp-controller="Comment" asp-action="Delete">
                    <input type="hidden" name="commentId" class="modelIdInput" value="" />
                    <input type="hidden" name="bookId" value=@Model.Id />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade"
     id="ratingModal"
     tabindex="-1"
     aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Rate Book</h1>
            </div>
            <div class="modal-body">
                <div class="container-wrapper">
                    <div class="container d-flex align-items-center justify-content-center">
                        <div class="row justify-content-center">
                            <!-- star rating -->
                            <div class="rating-wrapper">
                                <!-- star 5 -->
                                <input type="radio" id="5-star-rating" name="star-rating" value="5">
                                <label for="5-star-rating" class="star-rating">
                                    <i class="fas fa-star d-inline-block"></i>
                                </label>
                                <!-- star 4 -->
                                <input type="radio" id="4-star-rating" name="star-rating" value="4">
                                <label for="4-star-rating" class="star-rating star">
                                    <i class="fas fa-star d-inline-block"></i>
                                </label>
                                <!-- star 3 -->
                                <input type="radio" id="3-star-rating" name="star-rating" value="3">
                                <label for="3-star-rating" class="star-rating star">
                                    <i class="fas fa-star d-inline-block"></i>
                                </label>
                                <!-- star 2 -->
                                <input type="radio" id="2-star-rating" name="star-rating" value="2">
                                <label for="2-star-rating" class="star-rating star">
                                    <i class="fas fa-star d-inline-block"></i>
                                </label>
                                <!-- star 1 -->
                                <input type="radio" id="1-star-rating" name="star-rating" value="1">
                                <label for="1-star-rating" class="star-rating star">
                                    <i class="fas fa-star d-inline-block"></i>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">
                    Close
                </button>
                <button data-model-id="@Model.Id" id="rateBtn" type="button" class="btn btn-primary" data-bs-dismiss="modal">
                    Rate
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/rating.js"></script>
    <script src="~/js/modal.js"></script>
    <script src="~/js/vote.js"></script>
    <script src="~/js/editComment.js"></script>
    <script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        tinymce.init({
            selector: "textarea",
            plugins: "table link code wordcount lists preview searchreplace"
        });
    </script>
}