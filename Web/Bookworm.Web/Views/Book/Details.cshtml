@model BookDetailsViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    this.ViewData["Title"] = Model.Title;
    string requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

@section Styles {
    <link rel="stylesheet" href="~/css/book/bookDetails.css" asp-append-version="true" />
}

<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

<section class="bookDetailsInfoSection">
    <div>
        <img class="img-fluid" src=@Model.ImageUrl alt=@Model.Title />
    </div>
    <ul class="list-group">
        <li class="list-group-item">
            <strong>@Model.Title</strong>
        </li>
        @if (Model.PublisherName != null)
        {
            <li class="list-group-item">Publisher: @Model.PublisherName</li>
        }
        <li class="list-group-item">
            Category:
            <a asp-controller="Book"
               asp-action="All"
               asp-route-category="@Model.CategoryName">
                @Model.CategoryName
            </a>
        </li>
        <li class="list-group-item">Pages: @Model.PagesCount</li>
        <li class="list-group-item">Language: @Model.Language</li>
        <li class="list-group-item">Downloads: @Model.DownloadsCount</li>
        @if (Model.Comments?.Count() > 0)
        {
            <li class="list-group-item">Comments: @Model.Comments.Count()</li>
        }
        else
        {
            <li class="list-group-item">Comments: 0</li>
        }
        <li class="list-group-item">
            Average Rating:
            <span class="bookAvgRating">@Model.RatingsAvg.ToString("f1")</span>
            <span>/5.0</span>
            <span>(Ratings count: <span class="bookRatingsCount">@Model.RatingsCount</span>)</span>
        </li>
        <li class="list-group-item">
            <span> Authors: @string.Join(", ", Model.Authors)</span>
        </li>
        <li class="list-group-item">
            <span>uploaded by - @Model.Username</span>
        </li>
    </ul>
</section>

@if (this.User.Identity.IsAuthenticated)
{
    <section class="bookDetailsActionsSection">
        <a class="btn btn-lg button"
           asp-controller="Book"
           asp-action="Download"
           asp-route-id="@Model.Id">
            Download<i class="fas fa-download icon ms-2"></i>
        </a>
        @if (Model.IsUserBook == false && Model.IsApproved)
        {
            <button class="btn btn-lg button"
                    data-bs-toggle="modal"
                    data-bs-target="#ratingModal">
                Rate Book<i class="fas fa-star icon ms-2"></i>
            </button>
        }
        else if (Model.IsUserBook)
        {
            <a class="btn btn-lg button"
               asp-controller="Book"
               asp-action="Edit"
               asp-route-bookId="@Model.Id">
                Edit<i class="fas fa-user-pen icon ms-2"></i>
            </a>
            <a class="btn btn-lg button"
               data-bs-toggle="modal"
               data-bs-target="#deleteBookModal">
                Delete<i class="fas fa-trash-can icon ms-2"></i>
            </a>
        }
    </section>
}

<section class="bookDetailsDescSection">
    <div class="card">
        <div class="card-header">
            Description
        </div>
        <div class="card-body">
            <p class="card-text">@Html.Raw(Model.SanitizedDescription)</p>
        </div>
    </div>
</section>

@if (Model.IsApproved)
{
    <section class="bookDetailsCommentsSection">
        <div class="formContainer">
            <form method="post" asp-controller="Comment" asp-action="Post">
                <input type="hidden" asp-for="PostComment.BookId" value="@Model.Id" />
                <div class="form-group">
                    <textarea asp-for="PostComment.Content" class="form-control" rows="15"></textarea>
                    <span asp-validation-for="PostComment.Content" class="text-danger"></span>
                </div>
                <div class="text-center mt-4">
                    <button type="submit" class="button btn btn-lg">
                        Post Comment<i class="fa-solid fa-comment ms-2"></i>
                    </button>
                </div>
            </form>
        </div>
        @if (Model.Comments?.Count() > 0)
        {
            <section class="commentsSection">
                <h2 class="text-white">Comments: @Model.Comments.Count()</h2>
                @if (Model.Comments.Count() > 1 && this.User.Identity.IsAuthenticated)
                {
                    <partial name="PartialViews/_CommentsButtonsPartial" />
                }
                <div class="commentsContainer">
                    @foreach (CommentViewModel comment in Model.Comments)
                    {
                        <article class="card">
                            <div class="card-header">
                                <span>Posted by - @comment.UserUserName</span>
                                @if (this.User.Identity.IsAuthenticated)
                                {
                                    <div class="commentActionsContainer">
                                        <div class="arrowsContainer">
                                            @if (!comment.IsCommentOwner)
                                            {
                                                <i onclick=onUpArrowClick(this)
                                                   data-model-id=@comment.Id
                                                   class="fas fa-circle-up hover @(comment.UserVoteValue == 1 ? "greenUpArrow" : "")">
                                                </i>

                                                <span>@comment.NetWorth</span>

                                                <i onclick=onDownArrowClick(this)
                                                   data-model-id=@comment.Id
                                                   class="fas fa-circle-down hover @(comment.UserVoteValue == -1 ? "redDownArrow" : "")">
                                                </i>
                                            }
                                            else
                                            {
                                                <i class="fas fa-circle-up"></i>
                                                <span>@comment.NetWorth</span>
                                                <i class="fas fa-circle-down"></i>
                                            }
                                        </div>
                                        @if (comment.IsCommentOwner || this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                                        {
                                            <div class="btnsContainer">
                                                <button class="btn btn-lg btn-danger modalBtn"
                                                        data-model-id=@comment.Id
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#deleteModal"
                                                        onclick="onDeleteCommentBtnClick(this)">
                                                    <i class="fa fa-trash-can"></i>
                                                </button>
                                                <button class="btn btn-lg btn-warning modalBtn"
                                                        onclick="onEditCommentBtnClick(this)"
                                                        data-model-id=@comment.Id
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#editModal">
                                                    <i class="fa fa-square-pen"></i>
                                                </button>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                            <div class="card-body">
                                @Html.Raw(comment.SanitizedContent)
                            </div>
                        </article>
                    }
                </div>
            </section>
        }
    </section>
}

<partial name="PartialViews/Modals/_DeleteBookModalPartial" />
<partial name="PartialViews/Modals/_EditCommentModalPartial" />
<partial name="PartialViews/Modals/_DeleteCommentModalPartial" />
<partial name="PartialViews/Modals/_RateBookModalPartial" />

@section Scripts {
    <script src="~/js/book/vote.js"></script>
    <script src="~/js/book/rating.js"></script>
    <script src="~/js/book/comments.js"></script>
    <script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        tinymce.init({
            selector: "textarea",
            placeholder: 'Type your comment here...',
            plugins: "code wordcount lists preview searchreplace",
            content_style: 'body { font-size: 14pt;}',
        });
    </script>
}