@model QuoteListingViewModel

@{
    this.ViewData["Title"] = "All Quotes";
    var quotes = this.Model.Quotes.ToList();
}

<div class="d-flex justify-content-center my-5">
    <div class="card title-card animate__animated animate__jackInTheBox">
        <div class="card-body">
            <h3>@this.ViewData["Title"] (@Model.Quotes.Count)</h3>
        </div>
    </div>
</div>


<div class="btn-group mt-5 d-flex justify-content-center" role="group" aria-label="Basic radio toggle button group">
    <input type="radio" class="btn-check" name="btnradio" id="movieQuotesRadio" autocomplete="off">
    <label class="btn border border-2" for="movieQuotesRadio">Show only movie quotes</label>

    <input type="radio" class="btn-check" name="btnradio" id="bookQuotesRadio" autocomplete="off">
    <label class="btn border border-2" for="bookQuotesRadio">Show only book quotes</label>

    <input type="radio" class="btn-check" name="btnradio" id="otherQuotesRadio" autocomplete="off">
    <label class="btn border border-2" for="otherQuotesRadio">Show only general quotes</label>
</div>

<div class="input-group my-5">
    <input type="text" class="form-control border border-2 border-black" id="searchQuotesInput" placeholder="Search quotes..." aria-label="Recipient's username" aria-describedby="button-addon2">
    <button class="btn border border-2 border-black" type="button" id="searchQuotesBtn"><i class="fa-solid fa-magnifying-glass"></i></button>
</div>

<div class="table-responsive my-5">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th class="text-center align-middle" scope="col">#</th>
                <th class="text-center align-middle" scope="col">Content</th>
                <th class="text-center align-middle" scope="col">Author</th>
                <th class="text-center align-middle" scope="col">Movie</th>
                <th class="text-center align-middle" scope="col">Book</th>
            </tr>
        </thead>
        <tbody class="table-body">
            @for (int i = 0; i <= Model.Quotes.Count() - 1; i++)
            {
                <tr>
                    <th class="text-center align-middle" scope="row">@(i + 1)</th>
                    <td class="align-middle">@Model.Quotes[i].Content</td>
                    @if (@Model.Quotes[i].AuthorName != null)
                    {
                        <td class="text-center align-middle">@Model.Quotes[i].AuthorName</td>
                    }
                    else
                    {
                        <td class="text-center align-middle"><i class="fa-solid fa-minus fa-xl"></i></td>
                    }
                    @if (@Model.Quotes[i].MovieTitle != null)
                    {
                        <td class="text-center align-middle">@Model.Quotes[i].MovieTitle</td>
                    }
                    else
                    {
                        <td class="text-center align-middle"><i class="fa-solid fa-minus fa-xl"></i></td>
                    }
                    @if (@Model.Quotes[i].BookTitle != null)
                    {
                        <td class="text-center align-middle">@Model.Quotes[i].BookTitle</td>
                    }
                    else
                    {
                        <td class="text-center align-middle"><i class="fa-solid fa-minus fa-xl"></i></td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script type="module" src="~/js/quotes/allQuotes.js"></script>
}
