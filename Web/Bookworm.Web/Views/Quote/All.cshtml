@model QuoteListingViewModel

@{
    var quotes = this.Model.Quotes.ToList();
    this.ViewData["Title"] = "All Quotes";
    this.ViewData["Count"] = quotes.Count;
}

<partial name="PartialViews/_TitleCardPartial" />

<div class="btn-group my-5 mb-3 d-flex justify-content-center" role="group" aria-label="Basic radio toggle button group">
    <input type="radio" class="btn-check" name="btnradio" id="movieQuotesRadio" autocomplete="off">
    <label class="btn border border-2" for="movieQuotesRadio">Show only movie quotes</label>

    <input type="radio" class="btn-check" name="btnradio" id="bookQuotesRadio" autocomplete="off">
    <label class="btn border border-2" for="bookQuotesRadio">Show only book quotes</label>

    <input type="radio" class="btn-check" name="btnradio" id="otherQuotesRadio" autocomplete="off">
    <label class="btn border border-2" for="otherQuotesRadio">Show only general quotes</label>

    <input type="radio" class="btn-check" name="btnradio" id="likedQuotesRadio" autocomplete="off">
    <label class="btn border border-2" for="likedQuotesRadio">Show only liked quotes</label>
</div>

<div class="input-group mb-3">
    <input type="text" class="form-control border border-2 border-black" id="searchQuotesInput" placeholder="Search quotes..." aria-label="Recipient's username" aria-describedby="button-addon2">
    <button class="btn border border-2 border-black" type="button" id="searchQuotesBtn"><i class="fa-solid fa-magnifying-glass fa-xl"></i></button>
</div>


<div class="table-responsive mb-3">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th class="text-center align-middle" scope="col">#</th>
                <th class="text-center align-middle" scope="col">Content</th>
                <th class="text-center align-middle" scope="col">Author</th>
                <th class="text-center align-middle" scope="col">Movie</th>
                <th class="text-center align-middle" scope="col">Book</th>
                <th class="text-center align-middle" scope="col">Likes</th>
            </tr>
        </thead>
        <tbody class="table-body">
            @for (int i = 0; i <= Model.Quotes.Count() - 1; i++)
            {
                <tr>
                    <th class="text-center align-middle" scope="row">@(i + 1)</th>
                    <td class="align-middle">@Model.Quotes[i].Content</td>
                    @if (@Model.Quotes[i].AuthorName != null)
                    {
                        <td class="text-center align-middle">@Model.Quotes[i].AuthorName</td>
                    }
                    else
                    {
                        <td class="text-center align-middle"><i class="fa-solid fa-minus fa-xl"></i></td>
                    }
                    @if (@Model.Quotes[i].MovieTitle != null)
                    {
                        <td class="text-center align-middle">@Model.Quotes[i].MovieTitle</td>
                    }
                    else
                    {
                        <td class="text-center align-middle"><i class="fa-solid fa-minus fa-xl"></i></td>
                    }
                    @if (@Model.Quotes[i].BookTitle != null)
                    {
                        <td class="text-center align-middle">@Model.Quotes[i].BookTitle</td>
                    }
                    else
                    {
                        <td class="text-center align-middle"><i class="fa-solid fa-minus fa-xl"></i></td>
                    }
                    <td class="text-center align-middle likes-container">
                        @if (this.User.Identity.IsAuthenticated)
                        {
                            <i onclick="likeQuoteFunc(@Model.Quotes[i].Id, this)" class="@(Model.Quotes[i].HasBeenLiked ? "fa-solid" : "fa-regular") fa-thumbs-up fa-2xl likeQuote"></i>
                        }
                        else
                        {
                            <i class="fa-regular fa-thumbs-up fa-2xl"></i>
                        }
                        <span id="likesCount">(@Model.Quotes[i].Likes)</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<form method="post" id="antiForgeryForm"></form>
@section Scripts {
    <script type="module" src="~/js/quotes/allQuotes.js"></script>
    <script src="~/js/quotes/likeQuote.js"></script>
}
