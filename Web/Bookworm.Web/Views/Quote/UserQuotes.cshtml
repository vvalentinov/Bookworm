@model UserQuoteListingViewModel

@{
    this.ViewData["Title"] = "My Quotes";
    this.ViewData["Count"] = @Model.Quotes.Count;
}

<partial name="PartialViews/_TitleCardPartial" />

@if (Model.Quotes.Count() == 0)
{
    <h3 class="text-center mt-5 display-3">You haven't uploaded any quotes!</h3>
}
else
{
    <div class="btn-group d-flex justify-content-center my-5 mb-3"
         role="group"
         aria-label="Basic radio toggle button group">
        <input type="radio" class="btn-check" name="btnradio" id="approvedQuotesRadio" autocomplete="off">
        <label class="btn border border-2" for="approvedQuotesRadio">Show only approved quotes - @Model.ApprovedQuotesCount</label>

        <input type="radio" class="btn-check" name="btnradio" id="unapprovedQuotesRadio" autocomplete="off">
        <label class="btn border border-2" for="unapprovedQuotesRadio">Show only unapproved quotes - @Model.UnapprovedQuotesCount</label>
    </div>

    <partial name="PartialViews/_QuotesTypeFilterPartial" />
    <partial name="PartialViews/_QuotesSearchPartial" />

    @* <div class="input-group">
        <input type="text"
               class="form-control border border-2 border-black"
               id="searchQuotesInput"
               placeholder="Search quotes..."
               aria-label="Recipient's username"
               aria-describedby="button-addon2">
        <button class="btn border border-2 border-black"
                type="button"
                id="searchQuotesBtn">
            <i class="fa-solid fa-magnifying-glass"></i>
        </button>
    </div> *@

    <div class="table-responsive my-3">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="text-center align-middle" scope="col">#</th>
                    <th class="text-center align-middle" scope="col">Content</th>
                    <th class="text-center align-middle" scope="col">Author</th>
                    <th class="text-center align-middle" scope="col">Movie</th>
                    <th class="text-center align-middle" scope="col">Book</th>
                    <th class="text-center align-middle" scope="col">Likes</th>
                    <th class="text-center align-middle" scope="col">Is Approved</th>
                    <th class="text-center align-middle" scope="col">Edit</th>
                    <th class="text-center align-middle" scope="col">Delete</th>
                </tr>
            </thead>
            <tbody class="table-body">
                @for (int i = 0; i <= Model.Quotes.Count() - 1; i++)
                {
                    <tr>
                        <th class="text-center align-middle" scope="row">@(i + 1)</th>
                        <td class="align-middle">@Model.Quotes[i].Content</td>
                        @if (@Model.Quotes[i].AuthorName != null)
                        {
                            <td class="text-center align-middle">@Model.Quotes[i].AuthorName</td>
                        }
                        else
                        {
                            <td class="text-center align-middle"><i class="fa-solid fa-minus fa-xl"></i></td>
                        }
                        @if (@Model.Quotes[i].MovieTitle != null)
                        {
                            <td class="text-center align-middle">@Model.Quotes[i].MovieTitle</td>
                        }
                        else
                        {
                            <td class="text-center align-middle"><i class="fa-solid fa-minus fa-xl"></i></td>
                        }
                        @if (@Model.Quotes[i].BookTitle != null)
                        {
                            <td class="text-center align-middle">@Model.Quotes[i].BookTitle</td>
                        }
                        else
                        {
                            <td class="text-center align-middle"><i class="fa-solid fa-minus fa-xl"></i></td>
                        }
                        <td class="text-center align-middle">@Model.Quotes[i].Likes</td>
                        <td class="text-center align-middle">
                            @if (Model.Quotes[i].IsApproved)
                            {
                                <i class="fa-solid fa-circle-check fa-xl checkIcon"></i>
                            }
                            else
                            {
                                <i class="fa-regular fa-circle-xmark fa-xl x-icon"></i>
                            }
                        </td>
                        <td class="text-center align-middle">
                            <a asp-area=""
                               asp-controller="Quote"
                               asp-action="Edit"
                               asp-route-id="@Model.Quotes[i].Id"
                               class="btn btn-outline-warning">
                                <i class="fa-solid fa-pen-to-square fa-xl"></i>
                            </a>
                        </td>
                        <td class="text-center align-middle">
                            <a class="btn btn-outline-danger modalBtn"
                               data-model-id="@Model.Quotes[i].Id"
                               data-bs-toggle="modal"
                               data-bs-target="#deleteQuoteModal">
                                <i class="fa-solid fa-trash-can fa-xl"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<partial name="PartialViews/Modals/_DeleteQuoteModalPartial" />


@section Scripts {
    <script src="~/js/modal.js"></script>
    <script type="module" src="~/js/quotes/userQuotes.js" charset="UTF-8"></script>
}