@model PagingViewModel

@{
    var controllerName = this.ViewData["PaginationControllerName"];
    var actionName = this.ViewData["PaginationActionName"];
}

<nav id="pagination" aria-label="...">
    <ul class="pagination pagination-lg justify-content-center">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link"
               asp-controller=@controllerName
               asp-action=@actionName
               asp-route-id="@Model.PreviousPageNumber">
                <i class="fa fa-angles-left"></i>
            </a>
        </li>
        @for (int i = Model.PageNumber - 4; i < Model.PageNumber; i++)
        {
            if (i > 0)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-controller=@controllerName
                       asp-action=@actionName
                       asp-route-id="@i">
                        @i
                    </a>
                </li>
            }
        }
        <li class="page-item active" aria-current="page">
            <span class="page-link">
                @Model.PageNumber
                <span class="sr-only">(current)</span>
            </span>
        </li>
        @for (int i = Model.PageNumber + 1; i <= Model.PageNumber + 4; i++)
        {
            if (i <= Model.PagesCount)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-controller=@controllerName
                       asp-action=@actionName
                       asp-route-id="@i">
                        @i
                    </a>
                </li>
            }
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link"
               asp-controller=@controllerName
               asp-action=@actionName
               asp-route-id="@Model.NextPageNumber">
                <i class="fa fa-angles-right"></i>
            </a>
        </li>
    </ul>
</nav>
