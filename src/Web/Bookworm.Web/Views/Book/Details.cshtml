@model BookDetailsViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    this.ViewData["Title"] = Model.Title;
    string requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

@* Book Image + Info *@
<section class="bookDetailsInfoSection d-flex justify-content-center align-items-center gap-5 mx-5">
    <div class="w-25">
        <img class="img-fluid w-100 rounded-4" src=@Model.ImageUrl alt=@Model.Title />
    </div>
    <ul class="list-group w-75 fs-5">
        <li class="list-group-item">
            @Model.Title
        </li>
        @if (Model.PublisherName != null)
        {
            <li class="list-group-item">Publisher: @Model.PublisherName</li>
        }
        <li class="list-group-item">
            Category:
            <a asp-controller="Book"
               asp-action="All"
               asp-route-category="@Model.CategoryName">
                @Model.CategoryName
            </a>
        </li>
        <li class="list-group-item">Pages: @Model.PagesCount</li>
        <li class="list-group-item">Language: @Model.Language</li>
        <li class="list-group-item">Downloads: @Model.DownloadsCount</li>
        <li class="list-group-item">
            <a href="#comments-section">
                Comments: @(Model.CommentsListing.RecordsCount > 0 ? Model.CommentsListing.RecordsCount : 0)
            </a>
        </li>
        <li class="list-group-item">
            Average Rating:
            <span class="bookAvgRating">@Model.RatingsAvg.ToString("f1")</span>
            <span>/5.0</span>
            <span>(Ratings count: <span class="bookRatingsCount">@Model.RatingsCount</span>)</span>
        </li>
        <li class="list-group-item">
            <span> Authors: @string.Join(", ", Model.Authors)</span>
        </li>
        <li class="list-group-item">
            <span>uploaded by - @Model.Username</span>
        </li>
    </ul>
</section>

@* Book Buttons For Download, Delete, Rate and Edit *@
@if (this.User.Identity.IsAuthenticated)
{
    <section class="bookDetailsActionsSection d-flex justify-content-evenly gap-4 my-4 mx-5">
        <a class="btn btn-lg button rounded-4"
           asp-controller="Book"
           asp-action="Download"
           asp-route-id="@Model.Id">
            Download<i class="fas fa-download icon ms-2"></i>
        </a>
        @if (!Model.IsUserBook && Model.IsApproved)
        {
            <button class="btn btn-lg button rounded-4"
                    data-bs-toggle="modal"
                    data-bs-target="#ratingModal">
                Rate Book<i class="fas fa-star icon ms-2"></i>
            </button>

            <button asp-bookId="@Model.Id"
                    id="addToFavoritesBtn"
                    class="btn btn-lg button rounded-4">
                Add to Favourites<i class="fas fa-heart icon ms-2"></i>
            </button>
        }
        else if (Model.IsUserBook)
        {
            <a class="btn btn-lg button rounded-4"
               asp-controller="Book"
               asp-action="Edit"
               asp-route-id="@Model.Id">
                Edit
                <i class="fas fa-user-pen icon ms-2"></i>
            </a>
            <a class="btn btn-lg button rounded-4"
               data-bs-toggle="modal"
               data-bs-target="#deleteBookModal">
                Delete
                <i class="fas fa-trash-can icon ms-2"></i>
            </a>
        }
    </section>
}

@* Book Description *@
<section class="bookDetailsDescSection mb-4 mx-5">
    <div class="card rounded-4 w-100">
        <div class="card-header rounded-top-4 fs-5">
            Description
        </div>
        <div class="card-body text-white rounded-bottom-4 fs-5">
            <p class="card-text">@Html.Raw(Model.SanitizedDescription)</p>
        </div>
    </div>
</section>

@if (Model.IsApproved)
{
    <section class="bookDetailsCommentsSection mx-5">

        @* Post Comment Form *@
        <div class="formContainer mb-4 p-4 rounded-4">
            <form style="border: none;" method="post" asp-controller="Comment" asp-action="Post">
                <input type="hidden" asp-for="PostComment.BookId" value="@Model.Id" />
                <div class="form-group">
                    <textarea asp-for="PostComment.Content" class="form-control bookComment" rows="15"></textarea>
                    <span asp-validation-for="PostComment.Content" class="text-danger"></span>
                </div>
                <div class="text-center mt-4">
                    <button type="submit" class="button btn btn-lg fs-4">
                        Post Comment<i class="fa-solid fa-comment ms-2"></i>
                    </button>
                </div>
            </form>
        </div>

        @if (Model.CommentsListing.Comments.Count() > 0)
        {
            <partial name="PartialViews/_BookCommentsSectionPartial" model="@Model" />
        }

    </section>
}

<partial name="PartialViews/Modals/_DeleteBookModalPartial" />
<partial name="PartialViews/Modals/_EditCommentModalPartial" />
<partial name="PartialViews/Modals/_DeleteCommentModalPartial" />
<partial name="PartialViews/Modals/_RateBookModalPartial" />

@section Scripts {
    <script>
        const lastLi = document.querySelector('#pagination li:last-child');
        if (lastLi) { new bootstrap.Tooltip(lastLi); }
    </script>
    <script src="~/js/book/vote.js"></script>
    <script src="~/js/book/rating.js"></script>
    <script type="module" src="~/js/comments/comments.js">    </script>
    <script type="module" src="~/js/book/addToFavorites.js"></script>
    @* <script src="https://cdn.tiny.cloud/1/2inr0ldypeixlug7qi77045mkn5r03rnlkhn1cybt8lacrhq/tinymce/7/tinymce.min.js"
            referrerpolicy="origin">
    </script>
    <script src="~/js/tinyMce.js"></script> *@
}