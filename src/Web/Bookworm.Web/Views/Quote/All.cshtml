@model QuoteListingViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    this.ViewData["Title"] = "All Quotes";

    var titleCardModel = new TitleCardPartialViewModel
            {
                Title = "All Quotes",
                Count = Model.RecordsCount
            };

    var isUserAuthenticated = this.User.Identity.IsAuthenticated;

    string requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<partial name="PartialViews/_TitleCardPartial" model=titleCardModel />

@if (isUserAuthenticated)
{
    <partial name="PartialViews/Quotes/_QuotesButtonsPartial" />
}

<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

<section class="quotesSection d-flex flex-wrap justify-content-center gap-5 my-3 mx-5">
    @foreach (var quote in Model.Quotes)
    {
        <article style="height: 15rem; flex-basis: 30%;" class="card">
            <div class="card-header d-flex align-items-center justify-content-between fs-4">
                <span>Quote</span>
                <div>
                    @if (isUserAuthenticated)
                    {
                        <i onclick="likeQuote(this, @quote.Id, @quote.IsUserQuoteCreator.ToString().ToLower())"
                           class="fa-thumbs-up
                           @(quote.IsLikedByUser ? "fa-solid" : "fa-regular")
                           @(quote.IsUserQuoteCreator == false && isUserAuthenticated ? "likeQuote" : "")">
                        </i>
                    }
                    else
                    {
                        <i class="fa-regular fa-thumbs-up"></i>
                    }
                    <span class="quoteLikesCount">(@quote.Likes)</span>
                </div>
            </div>
            <div class="card-body align-content-center">
                <blockquote class="blockquote ">
                    <p class="text-center">@quote.Content</p>
                    <footer class="blockquote-footer text-end text-white">
                        @if (quote.AuthorName != null)
                        {
                            @quote.AuthorName
                        }
                        @if (quote.BookTitle != null)
                        {
                            <text>From the book: </text> @quote.BookTitle
                        }
                        @if (quote.MovieTitle != null)
                        {
                            <text>From the movie: </text> @quote.MovieTitle
                        }
                    </footer>
                </blockquote>
            </div>
        </article>
    }
</section>

@if (Model.PagesCount > 1)
{
    <vc:pagination controller="Quote"
                   action="All"
                   is-for-books="@false"
                   model="@Model">
    </vc:pagination>
}

@section Scripts {
    <script type="module" src="~/js/quote/allQuotes.js"></script>
    <script src="~/js/quote/likeQuote.js"></script>
}
